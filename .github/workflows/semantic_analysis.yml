
name: Semantic Semantic Bug Prediction

on:
  pull_request_target:
    branches:
      - main

permissions:
  pull-requests: write
  issues: write

jobs:
  predict:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install javalang pandas

    - name: Get changed Java files
      id: changed-files
      run: |
        files=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} | grep -E "\.java$" | xargs)
        echo "all_changed_files=$files" >> $GITHUB_OUTPUT
        if [ -n "$files" ]; then
          echo "any_changed=true" >> $GITHUB_OUTPUT
        else
          echo "any_changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Extract semantic features BEFORE changes (base)
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        git checkout ${{ github.event.pull_request.base.sha }}
        mkdir -p metrics_output_base
        # Run extraction for each changed file
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          echo "Processing $file for base metrics..."
          bash extract_semantic_features.sh https://github.com/${{ github.repository }}
          # Move output CSV to base dir
          mv metrics_output/*_metrics.csv metrics_output_base/summary_metrics.csv
        done

    - name: Extract semantic features AFTER changes (head)
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        git checkout ${{ github.event.pull_request.head.sha }}
        mkdir -p metrics_output_head
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          echo "Processing $file for head metrics..."
          bash extract_semantic_features.sh https://github.com/${{ github.repository }}
          mv metrics_output/*_metrics.csv metrics_output_head/summary_metrics.csv
        done

    - name: Run semantic prediction and compare
      if: steps.changed-files.outputs.any_changed == 'true'
      id: prediction
      run: |
        source venv/bin/activate
        # Predict for base
        python predict_semantic.py metrics_output_base/summary_metrics.csv
        mv semantic_predictions.csv semantic_predictions_base.csv
        # Predict for head
        python predict_semantic.py metrics_output_head/summary_metrics.csv
        mv semantic_predictions.csv semantic_predictions_head.csv
        # Compare and format results
        echo "Comparing predictions..."
        paste -d',' semantic_predictions_base.csv semantic_predictions_head.csv > semantic_predictions_comparison.csv
        echo "comment<<EOF" > $GITHUB_OUTPUT
        echo "### Semantic Defect Prediction Comparison" >> $GITHUB_OUTPUT
        cat semantic_predictions_comparison.csv >> $GITHUB_OUTPUT
        echo "\n\n> Each row shows base and head predictions for each class. Higher defect probability means higher risk." >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Comment on PR
      if: steps.changed-files.outputs.any_changed == 'true'
      uses: actions/github-script@v7
      env:
        COMMENT_BODY: "${{ steps.prediction.outputs.comment }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.issues.createComment({
            issue_number: context.payload.pull_request.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: process.env.COMMENT_BODY
          })
