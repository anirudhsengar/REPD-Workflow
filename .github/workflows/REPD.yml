name: Bug Prediction

on:
  pull_request_target:
    branches:
      - main

permissions:
  pull-requests: write
  issues: write

jobs:
  predict:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install tensorflow==2.12.0 pandas joblib
        sudo apt-get update
        sudo apt-get install -y cloc

    - name: Get changed files
      id: changed-files
      run: |
        files=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} | grep -E "\.(c|cpp|cxx|cc|h|hpp|hxx)\$" | xargs)
        echo "all_changed_files=$files" >> $GITHUB_OUTPUT
        if [ -n "$files" ]; then
          echo "any_changed=true" >> $GITHUB_OUTPUT
        else
          echo "any_changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Extract features BEFORE changes (base)
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        git checkout ${{ github.event.pull_request.base.sha }}
        chmod +x ./ExtractTraditionalFeatures.sh
        
        # Create base metrics directory
        mkdir -p metrics_output_base
        
        # Process each file and accumulate results
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          echo "Processing $file for base metrics..."
          ./ExtractTraditionalFeatures.sh "$file"
          
          # Find the generated directory and copy its contents
          generated_dir=$(ls -td metrics_output_* | head -n 1)
          if [ -d "$generated_dir" ]; then
            # Copy files to our accumulated directory
            cp -r "$generated_dir"/* metrics_output_base/ 2>/dev/null || true
            # Clean up the temporary directory
            rm -rf "$generated_dir"
          fi
        done

    - name: Extract features AFTER changes (head)
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        git checkout ${{ github.event.pull_request.head.sha }}
        chmod +x ./ExtractTraditionalFeatures.sh
        
        # Create head metrics directory
        mkdir -p metrics_output_head
        
        # Process each file and accumulate results
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          echo "Processing $file for head metrics..."
          ./ExtractTraditionalFeatures.sh "$file"
          
          # Find the generated directory and copy its contents
          generated_dir=$(ls -td metrics_output_* | head -n 1)
          if [ -d "$generated_dir" ]; then
            # Copy files to our accumulated directory
            cp -r "$generated_dir"/* metrics_output_head/ 2>/dev/null || true
            # Clean up the temporary directory
            rm -rf "$generated_dir"
          fi
        done

    - name: Verify or create trained model
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        if [ ! -d "trained_model" ] || [ ! -f "trained_model/metadata.json" ]; then
          echo "Training new model..."
          python save_trained_model.py
        else
          echo "Trained model found âœ…"
        fi

    - name: Run prediction
      if: steps.changed-files.outputs.any_changed == 'true'
      id: prediction
      run: |
        echo "Running predictions with trained model..."
        output_base=$(python predict.py metrics_output_base/summary_metrics.csv)
        output_head=$(python predict.py metrics_output_head/summary_metrics.csv)
        {
          echo "comment<<EOF"
          echo "## ðŸ“Š Bug Risk Analysis"
          echo ""
          echo "### ðŸ”„ BEFORE PR Changes:"
          echo "$output_base"
          echo ""
          echo "### âœ… AFTER PR Changes:"
          echo "$output_head"
          echo ""
          echo "### ðŸ’¡ Interpretation:"
          echo "- **Higher risk scores** indicate increased likelihood of bugs"
          echo "- **Lower risk scores** suggest improved code quality"
          echo "- Compare BEFORE vs AFTER to see the impact of your changes"
          echo "EOF"
        } >> $GITHUB_OUTPUT

    - name: Comment on PR
      if: steps.changed-files.outputs.any_changed == 'true'
      uses: actions/github-script@v6
      env:
        COMMENT_BODY: "${{ steps.prediction.outputs.comment }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.issues.createComment({
            issue_number: context.payload.pull_request.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: process.env.COMMENT_BODY
          })