name: Bug Prediction

on:
  pull_request_target:
    branches:
      - main

permissions:
  pull-requests: write
  issues: write

jobs:
  predict:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install tensorflow==2.12.0 pandas
        sudo apt-get update
        sudo apt-get install -y cloc

    - name: Get changed files
      id: changed-files
      run: |
        files=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} | grep -E "\.(c|cpp|cxx|cc|h|hpp|hxx)\$" | xargs)
        echo "all_changed_files=$files" >> $GITHUB_OUTPUT
        if [ -n "$files" ]; then
          echo "any_changed=true" >> $GITHUB_OUTPUT
        else
          echo "any_changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Extract features BEFORE changes (base)
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        git checkout ${{ github.event.pull_request.base.sha }}
        chmod +x ./ExtractTraditionalFeatures.sh
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          ./ExtractTraditionalFeatures.sh "$file"
        done
        generated_dir=$(ls -d metrics_output_* | head -n 1)
        mv "$generated_dir" metrics_output_base

    - name: Extract features AFTER changes (head)
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        git checkout ${{ github.event.pull_request.head.sha }}
        chmod +x ./ExtractTraditionalFeatures.sh
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          ./ExtractTraditionalFeatures.sh "$file"
        done
        generated_dir=$(ls -d metrics_output_* | head -n 1)
        mv "$generated_dir" metrics_output_head

    - name: Run prediction
      if: steps.changed-files.outputs.any_changed == 'true'
      id: prediction
      run: |
        output_base=$(python predict.py metrics_output_base/summary_metrics.csv)
        output_head=$(python predict.py metrics_output_head/summary_metrics.csv)
        echo "::set-output name=comment::Prediction BEFORE PR changes:%0A\`\`\`%0A$output_base%0A\`\`\`%0A%0APrediction AFTER PR changes:%0A\`\`\`%0A$output_head%0A\`\`\`"
    - name: Comment on PR
      if: steps.changed-files.outputs.any_changed == 'true'
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = ${{ steps.prediction.outputs.comment }};
          github.rest.issues.createComment({
            issue_number: context.payload.pull_request.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })